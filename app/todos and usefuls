mongo api https://www.mongodb.com/developer/products/atlas/atlas-data-api-introduction/
termux https://termux.dev/docs
linker https://play.google.com/store/apps/details?id=com.jcoder.linker

Now, Finding all the mongo queries in MainActivity (the main page).

MainActivity (Done)
- autocomplete load all (done)
- existing word (done)
- save (1st flow) (done)
- save (2nd flow) (done)
- mark as reminded (done)

MainActivity2 (done)
- backeup (done)
- sync up autocomplete (done)

MainActivity3 (done)
- pull words to remind (done)
- undo reminders (done)
- mark them as reminded (done)
- count how many are already marked as reminded (done)

MainActivity4 a.k.a OfflineAndDeletedWordsActivity (done)
- nothing in this file (done)

MainActivity5 (done)
- delete a word from mongo (done)
- get last 30 words from mongo (done)

bugs: pressing email on offline words sends emails twice.
todo: when sending offline words, it's always using javamail. try to have it sent using either or.
todo: delete any word. make it easy to find it easy to delete a word in MainActivity5.

//    String json = loadJSONFromAsset();
//
//    try {
//      JSONArray jsonObject = new JSONArray(json);
//      new FileService("inmemorydb.json").writeString(json);
//      System.out.println();
//    } catch (JSONException e) {
//      throw new RuntimeException(e);
//    }

//  public String loadJSONFromAsset() {
//    String json = null;
//    try {
//      InputStream is = context.getAssets().open("inmemorydb.json");
//      int size = is.available();
//      byte[] buffer = new byte[size];
//      is.read(buffer);
//      is.close();
//      json = new String(buffer, "UTF-8");
//    } catch (IOException ex) {
//      ex.printStackTrace();
//      return null;
//    }
//    return json;
//  }

//no need for this method as I already have one.
    public void writeString(String json) {
      if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
        try {
          Files.write(new File(externalFilesDir, filename).toPath(), ImmutableList.of(json));
        } catch (IOException e) {
          throw new RuntimeException(e);
        }
      }
    }

to use smaller string json
json = "[{\"word\": \"varnish\",   \"lookupTime\": \"2025-09-05T09:23:28.525Z\"}]"